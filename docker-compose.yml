version: "3.8"

services:
    # NGINX Load Balancer
    nginx:
        image: nginx:alpine
        container_name: uber-assistant-lb
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/conf.d:/etc/nginx/conf.d:ro
        depends_on:
            - backend-1
            - backend-2
            - backend-3
        networks:
            - uber-network
        restart: unless-stopped

    # Backend Service Instance 1
    backend-1:
        build:
            context: ./backend
            dockerfile: Dockerfile
        container_name: uber-backend-1
        environment:
            - NODE_ENV=production
            - PORT=3000
            - INSTANCE_ID=backend-1
        volumes:
            - backend-storage-1:/app/storage
        networks:
            - uber-network
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--quiet",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3000/",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

    # Backend Service Instance 2
    backend-2:
        build:
            context: ./backend
            dockerfile: Dockerfile
        container_name: uber-backend-2
        environment:
            - NODE_ENV=production
            - PORT=3000
            - INSTANCE_ID=backend-2
        volumes:
            - backend-storage-2:/app/storage
        networks:
            - uber-network
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--quiet",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3000/",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

    # Backend Service Instance 3
    backend-3:
        build:
            context: ./backend
            dockerfile: Dockerfile
        container_name: uber-backend-3
        environment:
            - NODE_ENV=production
            - PORT=3000
            - INSTANCE_ID=backend-3
        volumes:
            - backend-storage-3:/app/storage
        networks:
            - uber-network
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--quiet",
                    "--tries=1",
                    "--spider",
                    "http://localhost:3000/",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

networks:
    uber-network:
        driver: bridge

volumes:
    backend-storage-1:
    backend-storage-2:
    backend-storage-3:
